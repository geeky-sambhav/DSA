class Solution{
public:
int findLastIndex(string str,int start,int end){
    if(start>end){
        return -1;
    }
    stack<char>s;
    for(int i=start;i<=end;i++){
        if(str[i]=='('){
            s.push(str[i]);
        }
        else if
            (str[i]==')'){
            s.pop();
            if(s.empty()){
                return i;
            }}
        
     
    }
   return -1;
       
    
    
}
Node* solve(string str,int start,int end){
    if(start>end){
        return NULL;
    }
    int num=0;
    while(start<=end && isdigit(str[start])){
        num=num*10+str[start]-'0';
        start++;
    }
    Node* root=new Node(num);
    int index=-1;
    if(start<=end && str[start]=='('){
            index=findLastIndex(str,start,end);
    }
    if(index!=-1){
        root->left=solve(str,start+1,index-1);
        root->right=solve(str,index+2,end-1);
    }
    return root;
}
    // function to construct tree from string
    Node *treeFromString(string str){
        return solve(str,0,str.size()-1);
    }
};